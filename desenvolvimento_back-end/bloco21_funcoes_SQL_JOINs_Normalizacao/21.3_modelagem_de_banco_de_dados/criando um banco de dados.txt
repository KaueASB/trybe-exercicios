					CRIANDO UM BANCO DE DADOS
					
-- Cria um banco de dados com o nome especificado.
CREATE DATABASE nome_do_banco_de_dados;

-- Sinônimo de CREATE DATABASE, também cria um banco de dados.
CREATE SCHEMA nome_do_banco_de_dados;

-- Verifica se o banco de dados ainda não existe.
-- Essa verificação é comumente utilizada junto ao CREATE DATABASE para evitar
-- a tentativa de criar um banco de dados duplicado, o que ocasionaria um erro.
IF NOT EXISTS nome_do_banco_de_dados;

-- Lista todos os bancos de dados existentes.
SHOW DATABASES;

-- Define o banco de dados ativo para uso no momento.
USE nome_do_banco_de_dados;

=======================================================================================================

Chave primária composta

No vídeo vimos que a chave primária é uma restrição, ou constraint que serve para identificar uma linha e garantir que não haverá dados redundantes em uma tabela. Uma chave primária pode ser formada por uma ou mais colunas de uma tabela. Ou seja, por mais que só possamos ter uma única chave primária por tabela, essa chave pode ser simples (apenas uma coluna) ou composta (conjunto de colunas).

Veremos um exemplo para ilustrar a utilização de uma chave primária composta, considere a seguinte tabela:

DROP SCHEMA IF EXISTS Brasil;
CREATE SCHEMA Brasil;
USE Brasil;

CREATE TABLE cidades(
  cidade VARCHAR(100) NOT NULL,
  estado VARCHAR(10) NOT NULL,
  populacao INTEGER,
  CONSTRAINT PRIMARY KEY(cidade)
);

=======================================================================================================

-- Há muitas formas de grafia existentes, mas para manter uma padronização e serguirmos a boa prática adotaremos a notação em "snake_case"

-- para construirmos nossos bancos de dados e tabelas.

    DROP SCHEMA IF EXISTS trybe_flix;
    CREATE SCHEMA trybe_flix;
    USE trybe_flix;

-- Primeiro criamos a tabela actor
    CREATE TABLE actor(
        actor_id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
        name VARCHAR(255) NOT NULL
    );

-- E a tabela film
    CREATE TABLE film(
        film_id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
        name VARCHAR(255) NOT NULL
    );

-- E por fim, a tabela film_actor com a relação N:N

    CREATE TABLE film_actor(
	    actor_id INTEGER,
	    film_id INTEGER,
	    CONSTRAINT PRIMARY KEY(actor_id, film_id),
        FOREIGN KEY (actor_id) REFERENCES Actor (actor_id),
        FOREIGN KEY (film_id) REFERENCES Film (film_id)
    );
